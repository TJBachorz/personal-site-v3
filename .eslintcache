[{"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/index.js":"1","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/App.js":"2","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/reportWebVitals.js":"3","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Navbar.js":"4","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/BioPage.js":"5","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Projects.js":"6","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/ABCdl.js":"7","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/EpicBeer.js":"8","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Looksy.js":"9","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/MainContainer.js":"10","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Contact.js":"11","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Utilities.js":"12"},{"size":455,"mtime":1608171184138,"results":"13","hashOfConfig":"14"},{"size":789,"mtime":1608169693689,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607891025390,"results":"16","hashOfConfig":"14"},{"size":870,"mtime":1607972168512,"results":"17","hashOfConfig":"14"},{"size":4156,"mtime":1608415263051,"results":"18","hashOfConfig":"14"},{"size":2326,"mtime":1608576229432,"results":"19","hashOfConfig":"14"},{"size":3179,"mtime":1608416249639,"results":"20","hashOfConfig":"14"},{"size":2975,"mtime":1608416248699,"results":"21","hashOfConfig":"14"},{"size":3790,"mtime":1608416249639,"results":"22","hashOfConfig":"14"},{"size":3514,"mtime":1608488528505,"results":"23","hashOfConfig":"14"},{"size":3047,"mtime":1608576205590,"results":"24","hashOfConfig":"14"},{"size":3650,"mtime":1608404781520,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"b4p1lv",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/index.js",[],["56","57"],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/App.js",[],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/reportWebVitals.js",[],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Navbar.js",[],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/BioPage.js",["58"],"import React, { useState, useEffect } from 'react';\n\nimport { bioPageSkills, renderTechImages } from './Utilities';\n\nimport { Words, Frame, Animation } from 'arwes';\n\nexport default function BioPage() {\n\n    const [ animShow, setAnimShow ] = useState(false)\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (animShow === false) {\n                setAnimShow(!animShow)\n            }\n        }, 100)\n    }, [])\n\n    return (\n        <Animation show={animShow} animate timeout={2000}>\n            {anim => (\n                <>\n                    <section className=\"bio-page-container\">\n                        <div className=\"bio-info\">\n                            <div className=\"data-block-container\">\n                                <div className=\"data-block\">\n                                    <p className=\"bio-data\"><Words show={animShow} animate>subject_name:</Words></p> \n                                    <p className=\"answer\"><Words show={animShow} animate>Thomas Bachorz</Words></p>\n                                </div>\n                                <div className=\"data-block\">\n                                    <p className=\"bio-data\"><Words show={animShow} animate>nickname:</Words></p>\n                                    <p className=\"answer\"><Words show={animShow} animate>TJ</Words></p>\n                                </div>\n                                <div className=\"data-block\">\n                                    <p className=\"bio-data\"><Words show={animShow} animate>occupation:</Words></p>\n                                    <p className=\"answer\"><Words show={animShow} animate>Full-Stack Software Developer</Words></p>\n                                </div>\n                            </div>\n                            <ul>\n                                <li><Words show={animShow} animate>Former Professional Filmmaker and Brewer</Words></li>\n                                <li><Words show={animShow} animate>Excellent teamwork and communcation skills</Words></li>\n                                <li><Words show={animShow} animate>Seeks to create software that improves everything from workplace efficiency, to everyday lives</Words></li>\n                                <li><Words show={animShow} animate>Considered dangerously dependable</Words></li>\n                                <li><Words show={animShow} animate>Subject should be approached with extreme enthusiasm</Words></li>\n                            </ul>   \n                            \n                        </div>\n                        <div className=\"bio-image-container\">\n                            <Frame\n                                className=\"frame\"\n                                show={animShow}\n                                animate={true}\n                                level={3}\n                                corners={2}\n                                layer='secondary'\n                            >\n                                <div className=\"fuzzy-background\">\n                                    <img className=\"primary-img\" src=\"https://as2.ftcdn.net/jpg/02/60/78/83/500_F_260788352_x5sSHM4DGvpjHj9wz8sFltzAPktQwJCj.jpg\" alt=\"project gif\"/>\n                                </div>\n                            </Frame>\n                        </div>\n                        <div className=\"techs\">\n                            <h6 className=\"tech-label\"><Words show={animShow} animate>Skills:</Words></h6>\n                            <Frame\n                                className=\"frame\"\n                                show={animShow}\n                                animate={true}\n                                level={2}\n                                corners={1}\n                                layer='secondary'\n                                >\n                                <div className=\"fuzzy-background\">\n                                    {renderTechImages(bioPageSkills)}\n                                </div>\n                            </Frame>\n                        </div>\n                    </section>\n                </>\n            )}\n        </Animation>\n    )\n}\n","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Projects.js",["59"],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/ABCdl.js",["60"],"import React, { useState, useEffect } from 'react';\n\nimport { ABCTech, renderTechImages } from './Utilities';\n\nimport { Words, Frame } from 'arwes';\n\nexport default function ABCdl() {\n\n    const [ ABCAnimShow, setABCAnimShow ] = useState(false)\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (ABCAnimShow === false) {\n                setABCAnimShow(!ABCAnimShow)\n            }\n        }, 100)\n    }, [])\n\n    return (\n        <>\n            <div className=\"total-project-container\">\n                <div className=\"project-info\">\n                    <h2><Words animate >ABC Data Logger</Words></h2>\n                    <div className=\"project-link-container\">\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/ABC-Data-Logger-FE\"><Words animate>Frontend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/ABC_Data_Logger_BE\"><Words animate>Backend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.loom.com/share/ceb43bedf201465f8bec3eee151d2bbd\"><Words animate>Demo</Words></a></p>\n                    </div>\n                    <ul>\n                        <li><Words animate>Harnessed React Native Navigation library to create an intuitive UI and engaging user experience.</Words></li>\n                        <li><Words animate>Implemented Python/Django backend to persist JWT-authenticated user data and make speedy HTTP requests.</Words></li>\n                        <li><Words animate>Engineered the application to function on both iOS and Android devices in preparation of iOS and Google Play Store releases.</Words></li>\n                    </ul>\n                </div>\n                <div className=\"project-image-container\">\n                    <Frame\n                        className=\"frame\"\n                        show={ABCAnimShow}\n                        animate\n                        level={3}\n                        corners={2}\n                        layer='secondary'\n                    >\n                        <div className=\"fuzzy-background\">\n                            <img className=\"primary-img\" src=\"https://media1.giphy.com/media/5Imt9DlRz1vnJTM8P0/giphy.gif\" alt=\"project gif\"/>\n                        </div>\n                    </Frame>\n                </div>\n            </div>\n            <div className=\"techs\">\n                <h6 className=\"tech-label\"><Words animate>Tech used:</Words></h6>\n                <Frame\n                    className=\"frame\"\n                    show={ABCAnimShow}\n                    animate\n                    level={3}\n                    corners={1}\n                    layer='secondary'\n                >\n                <div className=\"fuzzy-background\">\n                    {renderTechImages(ABCTech)}\n                </div>\n                </Frame>\n            </div>\n        </>\n    )\n}\n","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/EpicBeer.js",["61"],"import React, { useEffect } from 'react';\n\nimport { epicBeerTech, renderTechImages } from './Utilities';\n\nimport { Words, Frame } from 'arwes';\n\n\nexport default function EpicBeer() {\n    \n\n\n    return (\n        <>\n            <div className=\"total-project-container\">\n                <div className=\"project-info\">\n                    <h2><Words animate>Epic Beer Run</Words></h2>\n                    <div className=\"project-link-container\">\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/Epic-Beer-Run-FE\"><Words animate>Frontend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/Epic-Beer-Run-BE\"><Words animate>Backend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.loom.com/share/b6fc55760ca9464a8a4d99d714bfb18e\"><Words animate>Demo</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://epic-beer-run.web.app/\"><Words animate>Hosted</Words></a></p>\n                    </div>\n                    <ul>\n                        <li><Words animate>Formulated a clean, fun, interactive map, utilizing TOPOJSON, react-simple-maps and react-tool-tips.</Words></li>\n                        <li><Words animate>Introduced accessible React Drag-and-Drop UI for instant point-to-point updates.</Words></li>\n                        <li><Words animate>Refined and serialized data pulled from BreweryDB API with Ruby on Rails using rest-client gem.</Words></li>\n                    </ul>\n                </div>\n                <div className=\"project-image-container\">\n                    <Frame\n                        animate\n                        level={3}\n                        corners={2}\n                        layer='secondary'\n                    >\n                        <div className=\"fuzzy-background\">\n                            <img className=\"primary-img\" src=\"https://media.giphy.com/media/xdlQcTOqbTpq53xy8c/giphy.gif\" alt=\"project gif\"/>\n                        </div>\n                    </Frame>\n                </div>\n            </div>\n            <div className=\"techs\">\n                <h6 className=\"tech-label\"><Words animate>Tech used:</Words></h6>\n                <Frame\n                    animate\n                    level={3}\n                    corners={1}\n                    layer='secondary'\n                >\n                <div className=\"fuzzy-background\">\n                    {renderTechImages(epicBeerTech)}\n                </div>\n                </Frame>\n            </div>\n        </>\n    )\n}\n","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Looksy.js",["62"],"import React, { useEffect } from 'react';\n\nimport { looksyTech, renderTechImages } from './Utilities';\n\nimport { Words, Frame } from 'arwes';\n\nimport looksyGIF1 from '../assets/looksy-1.gif';\nimport looksyGIF2 from '../assets/looksy-2.gif';\n\nexport default function Looksy() {\n\n    const backupGIFS = [\"https://j.gifs.com/ZYP52R.gif\", \"https://j.gifs.com/BNkzVN.gif\"]\n\n    const looksyGIFS = [looksyGIF1, looksyGIF2]\n\n    let imgCount = 1\n\n    const cycleGIFS = () => {\n        const gifImage = document.querySelector(\".primary-img\")\n        gifImage.src = looksyGIFS[imgCount]\n        return imgCount === 0 ? imgCount++ : imgCount--\n    }\n\n    useEffect(() => {\n        const looksyGIFIntervalID = setInterval(cycleGIFS, 9000)\n        return () => clearInterval(looksyGIFIntervalID)\n    })\n\n    return (\n        <>\n            <div className=\"total-project-container\">\n                <div className=\"project-info\">\n                    <h2><Words animate>Looksy</Words></h2>\n                    <div className=\"project-link-container\">\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/looksy-frontend\"><Words animate>Frontend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/looksy_backend\"><Words animate>Backend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/TJBachorz/looksy-file-uploader\"><Words animate>Node/AWS Backend</Words></a></p>\n                        <p className=\"separator\"><Words animate>|</Words></p>\n                        <p className=\"project-links\"><a rel=\"noreferrer\" target=\"_blank\" href=\"https://www.youtube.com/watch?v=HPJ6KVPMPac\"><Words animate>Demo</Words></a></p>\n                    </div>\n                    <ul>\n                        <li><Words animate>Utilized Ruby on Rails back-end API to persist user and 3D modeling data using JWT auth.</Words></li>\n                        <li><Words animate>Incorporated second database using Node with Express JS and AWS for URL returns on profile picture uploads.</Words></li>\n                        <li><Words animate>Leveraged Google’s model-viewer augmented reality tech to render 3D models in natural environments.</Words></li>\n                    </ul>\n                </div>\n                <div className=\"project-image-container\">\n                    <Frame\n                        animate\n                        timeout={3000}\n                        level={3}\n                        corners={2}\n                        layer='secondary'\n                    >\n                        <div className=\"fuzzy-background\">\n                            <img className=\"primary-img\" src={looksyGIFS[0]} alt=\"Looksy gif\"/>\n                        </div>\n                    </Frame>\n                </div>\n            </div>\n            <div className=\"techs\">\n                <h6 className=\"tech-label\"><Words animate>Tech used:</Words></h6>\n                <Frame\n                    animate\n                    level={3}\n                    corners={1}\n                    layer='secondary'\n                >\n                <div className=\"fuzzy-background\">\n                    {renderTechImages(looksyTech)}\n                </div>\n                </Frame>\n            </div>\n        </>\n    )\n    // <iframe src='//gifs.com/embed/looksy-1-ZYP52R' frameborder='0' scrolling='no' width='172px' height='360px' style='-webkit-backface-visibility: hidden;-webkit-transform: scale(1);' ></iframe>\n}\n","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/MainContainer.js",["63","64"],"import React, { useState, useEffect } from 'react';\n\nimport Navbar from './Navbar';\nimport BioPage from './BioPage';\nimport Projects from './Projects';\nimport Contact from './Contact';\n\nimport { Frame, Animation } from 'arwes';\n\nexport default function MainContainer() {\n\n    const [selectedPage, setSelectedPage] = useState(\"bio\")\n    const [ mainAnimShow, setMainAnimShow ] = useState(false)\n\n    useEffect(() => {\n        setMainAnimShow(!mainAnimShow)\n        return () => setMainAnimShow(!mainAnimShow)\n    }, [])\n\n    const showPage = {\n        \"bio\": <BioPage/>,\n        \"projects\": <Projects/>,\n        \"contact\": <Contact/>\n    }\n\n    let baseStyle = {\n        width: '0vw',\n        transition: 'all 400ms ease-out',\n        height: '5vh',\n        position: 'relative',\n        zIndex: 0\n    }\n\n    const pageStyle = (anim) => {\n        if (selectedPage === \"bio\"){\n            const style = {\n                entering: {\n                    width: \"80vw\",\n                },\n                entered: {\n                    width: \"80vw\",\n                    height:'75vh',\n                    // overflow: 'auto'\n                }\n            }\n            return {...style[anim.status]}\n        }\n        if (selectedPage === \"projects\"){\n            const style = {\n                entering: {\n                    width: \"80vw\"\n                },\n                entered: {\n                    width: \"80vw\",\n                    height: \"80vh\",\n                    overflow: 'auto'\n\n                }\n            }\n            return {...style[anim.status]}\n        }\n        if (selectedPage === \"contact\"){\n            const style = {\n                entering: {\n                    width: \"80vw\"\n                },\n                entered: {\n                    width: \"80vw\",\n                    height: \"75vh\",\n                    overflow: 'auto'\n\n                }\n            }\n            return {...style[anim.status]}\n        }\n    }\n    \n    const style = {\n        entering: {\n            width: \"80vw\"\n        },\n        entered: {\n            width: \"80vw\",\n            height: \"75vh\"\n        }\n    }\n\n    \n    // const navbar = document.querySelector(\".nav-bar\");\n    // const projectNavbar = document.querySelector(\".projects-nav\");\n\n    // const stickyNav = () => {\n    //     navbar.classList.add(\"sticky\")\n    //     console.log(projectNavbar)\n    //     if (projectNavbar !== null) {\n    //         projectNavbar.classList.add(\"sticky\")\n    //     }\n    // }\n    \n    return (\n        <div>\n            <Animation show={mainAnimShow} animate timeout={1000}>\n                {anim => (\n                    <Frame\n                        className=\"frame\"\n                        show={mainAnimShow}\n                        animate={true}\n                        appear\n                        level={3}\n                        corners={6}\n                        layer='primary'\n                    >\n                        <div animate className=\"main-container\" style={{...baseStyle, ...pageStyle(anim)}}>\n                            <Navbar \n                                selectedPage={selectedPage}\n                                setSelectedPage={setSelectedPage}\n                            />\n                            <div className=\"info-and-image\">\n                                {showPage[selectedPage]}\n                            </div>\n                        </div>\n                    </Frame>\n                )}\n            </Animation>\n        </div>\n    )\n}\n","/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Contact.js",["65","66"],"/Users/tjbachorz/Desktop/Programming/personal-site-v3/src/components/Utilities.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":17,"column":8,"nodeType":"73","endLine":17,"endColumn":10,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"72","line":16,"column":8,"nodeType":"73","endLine":16,"endColumn":10,"suggestions":"75"},{"ruleId":"71","severity":1,"message":"76","line":17,"column":8,"nodeType":"73","endLine":17,"endColumn":10,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":21},{"ruleId":"71","severity":1,"message":"83","line":18,"column":8,"nodeType":"73","endLine":18,"endColumn":10,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"85","line":78,"column":11,"nodeType":"80","messageId":"81","endLine":78,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":13,"column":8,"nodeType":"73","endLine":13,"endColumn":10,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":38,"column":77,"nodeType":"89","endLine":38,"endColumn":88},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'animShow'. Either include it or remove the dependency array. You can also do a functional update 'setAnimShow(a => ...)' if you only need 'animShow' in the 'setAnimShow' call.","ArrayExpression",["92"],["93"],"React Hook useEffect has a missing dependency: 'ABCAnimShow'. Either include it or remove the dependency array. You can also do a functional update 'setABCAnimShow(A => ...)' if you only need 'ABCAnimShow' in the 'setABCAnimShow' call.",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'backupGIFS' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mainAnimShow'. Either include it or remove the dependency array. You can also do a functional update 'setMainAnimShow(m => ...)' if you only need 'mainAnimShow' in the 'setMainAnimShow' call.",["95"],"'style' is assigned a value but never used.",["96"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"97","fix":"104"},"Update the dependencies array to be: [animShow]",{"range":"105","text":"106"},{"range":"107","text":"106"},"Update the dependencies array to be: [ABCAnimShow]",{"range":"108","text":"109"},"Update the dependencies array to be: [mainAnimShow]",{"range":"110","text":"111"},{"range":"112","text":"106"},[422,424],"[animShow]",[411,413],[418,420],"[ABCAnimShow]",[515,517],"[mainAnimShow]",[310,312]]